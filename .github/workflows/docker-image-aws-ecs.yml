name: Docker Image and AWS ECS CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        
    - name: Login to Amazon ECR Private
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Setup Java JDK
      uses: actions/setup-java@v4.6.0
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: Build Checkout API Jar
      working-directory: ./checkout-api
      run: mvn clean package
      
    - name: Docker Compose Build
      working-directory: .
      run: docker compose build

    - name: Build, tag, and push docker image to Amazon ECR Public
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/wiremock:latest ${{ secrets.WIREMOCK_IMAGE_REPO_URL }}:${{ github.run_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/wiremock:latest ${{ secrets.WIREMOCK_IMAGE_REPO_URL }}:latest

        docker tag ${{ secrets.DOCKER_USERNAME }}/checkout-api:latest ${{ secrets.CHECKOUT_API_IMAGE_REPO_URL }}:${{ github.run_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/checkout-api:latest ${{ secrets.CHECKOUT_API_IMAGE_REPO_URL }}:latest

        docker tag otel/opentelemetry-collector:latest ${{ secrets.COLLECTOR_IMAGE_REPO_URL }}:${{ github.run_id }}
        docker tag otel/opentelemetry-collector:latest ${{ secrets.COLLECTOR_IMAGE_REPO_URL }}:latest

        docker tag jaegertracing/all-in-one:1.47 ${{ secrets.JAEGER_API_IMAGE_REPO_URL }}:${{ github.run_id }}
        docker tag jaegertracing/all-in-one:1.47 ${{ secrets.JAEGER_API_IMAGE_REPO_URL }}:latest
        
        docker push ${{ secrets.WIREMOCK_IMAGE_REPO_URL }}:${{ github.run_id }}
        docker push ${{ secrets.WIREMOCK_IMAGE_REPO_URL }}:latest

        docker push ${{ secrets.CHECKOUT_API_IMAGE_REPO_URL }}:${{ github.run_id }}
        docker push ${{ secrets.CHECKOUT_API_IMAGE_REPO_URL }}:latest

        docker push ${{ secrets.COLLECTOR_IMAGE_REPO_URL }}:${{ github.run_id }}
        docker push ${{ secrets.COLLECTOR_IMAGE_REPO_URL }}:latest

        docker push ${{ secrets.JAEGER_IMAGE_REPO_URL }}:${{ github.run_id }}
        docker push ${{ secrets.JAEGER_IMAGE_REPO_URL }}:latest

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINITION_NAME }} --query taskDefinition > task-definition.json

    - name: Amazon ECS Deploy Task Definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      with:
        task-definition: task-definition.json
        service: ${{ secrets.SERVICE_NAME }}
        cluster: ${{ secrets.CLUSTER_NAME }}
        wait-for-service-stability: true
        force-new-deployment: true
    
    - name: Push to Docker Hub
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/wiremock:latest ${{ secrets.DOCKER_USERNAME }}/wiremock:${{github.run_id}}
        docker tag ${{ secrets.DOCKER_USERNAME }}/checkout-api:latest ${{ secrets.DOCKER_USERNAME }}/checkout-api:${{github.run_id}}
        docker push ${{ secrets.DOCKER_USERNAME }}/wiremock:${{github.run_id}}
        docker push ${{ secrets.DOCKER_USERNAME }}/wiremock:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/checkout-api:${{github.run_id}}
        docker push ${{ secrets.DOCKER_USERNAME }}/checkout-api:latest
        
